@mixin button-variant($color: "primary", $name: $color, $appearance: "solid") {
  .button--variant-#{$appearance}-#{$name} {
    @if $appearance != "none" {
      display: inline-flex;
      font-family: $font-family-button;
      font-weight: $font-weight-button;
      justify-content: center;
      line-height: $line-height-button;
      position: relative;
      text-align: center;
      text-decoration: none;
      transition: $transition-base;
    }

    @if $appearance == "none" {
      background-color: transparent;
      border: none;
      color: inherit;
      font-size: inherit;
      padding: 0;
      text-decoration: none;
    }

    @if $appearance == "solid" or $appearance == "outline" {
      border: 2px solid theme-color($color);
      border-radius: 0;
    }

    @if $appearance == "solid" {
      background-color: theme-color($color);
      color: text-color-contrast(theme-color($color), $white, $body-color);
    } @else if $appearance == "outline" {
      background-color: transparent;
      color: theme-color($color);
    } @else if $appearance == "link" {
      background-color: transparent;
      border: none;
      color: theme-color($color);
      position: relative;

      &::after {
        background-color: theme-color($color);
        content: "";
        height: 2px;
        position: absolute;
        transition: $transition-base;
      }
    }

    &:hover,
    &:focus,
    &:active {
      outline: none;
    }

    &:hover,
    &:focus {
      @if $appearance == "solid" or $appearance == "outline" {
        border-color: theme-color($color, dark);
      }

      @if $appearance == "solid" {
        background-color: theme-color($color, dark);
        color: text-color-contrast(
          theme-color($color, dark),
          $white,
          $body-color
        );
      } @else if $appearance == "outline" {
        background-color: theme-color($color);
        color: text-color-contrast(theme-color($color), $white, $body-color);
      } @else if $appearance == "link" {
        color: theme-color($color, dark);

        &::after {
          background-color: theme-color($color, dark);
        }
      }
    }

    &:active {
      @if $appearance == "solid" {
        background-color: theme-color($color, light);
        border-color: theme-color($color, light);
        color: text-color-contrast(
          theme-color($color, light),
          $white,
          theme-color($color, dark)
        );
      } @else if $appearance == "outline" {
        background-color: theme-color($color, light);
        border-color: theme-color($color, dark);
        color: text-color-contrast(
          theme-color($color, light),
          $white,
          theme-color($color, dark)
        );
      } @else if $appearance == "link" {
        color: theme-color($color);

        &::after {
          background-color: theme-color($color);
        }
      }
    }

    &:disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
  }
}

@mixin button-size($name, $font-size, $padding-x, $padding-y) {
  .button--size-#{$name} {
    font-size: $font-size;
    padding-bottom: $padding-y;
    padding-top: $padding-y;

    &:not(.button--variant-link) {
      padding-left: $padding-x;
      padding-right: $padding-x;
    }

    &::after {
      bottom: $padding-y - rem(4px);
      left: 0;
      right: 100%;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        right: 0;
      }
    }
  }
}
